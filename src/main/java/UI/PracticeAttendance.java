/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import backend.Attendance;
import backend.PlayerArray;
import backend.PracticeArray;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;

/**
 *
 * @author Ryang
 */
public class PracticeAttendance extends javax.swing.JFrame {

    public PracticeAttendance() {

        initComponents();

        DefaultComboBoxModel<String> comboModel = new DefaultComboBoxModel<String>();
        String[] practices = PracticeArray.getPracticeAsArray();
        for (int i = 0; i < practices.length; i++) {
            comboModel.addElement(practices[i]);
        }
        practiceDatesComboBox.setModel(comboModel);

        PlayerArray a = new PlayerArray();

        DefaultListModel<String> playerListModel = new DefaultListModel<String>();
        String[] players = a.getPlayers();
        for (int i = 0; i < players.length; i++) {
            playerListModel.addElement(players[i]);
        }
        teamList.setModel(playerListModel);

        Attendance b = new Attendance();

        DefaultListModel<String> practiceListModel = new DefaultListModel<String>();
        String[] practice = b.getPlayers();
        for (int i = 0; i < practice.length; i++) {
            practiceListModel.addElement(practice[i]);
        }
        practiceList.setModel(practiceListModel);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jScrollPane1 = new javax.swing.JScrollPane();
        teamList = new javax.swing.JList<>();
        backButton = new javax.swing.JButton();
        overviewLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        practiceList = new javax.swing.JList<>();
        toPlayersButton = new javax.swing.JButton();
        toPracticeButton = new javax.swing.JButton();
        substituteLabel = new javax.swing.JLabel();
        lineupLabel = new javax.swing.JLabel();
        selectPracticeLabel = new javax.swing.JLabel();
        practiceDatesComboBox = new javax.swing.JComboBox<>();
        showPracticeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(teamList);

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonActionPerformed(evt);
            }
        });

        overviewLabel.setFont(new java.awt.Font("Monospaced", 1, 48)); // NOI18N
        overviewLabel.setText("PRACTICE ATTENDANCE");

        jScrollPane2.setViewportView(practiceList);
        practiceList.getAccessibleContext().setAccessibleDescription("");

        toPlayersButton.setText("<");
        toPlayersButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                toPlayersButtonActionPerformed(evt);
            }
        });

        toPracticeButton.setText(">");
        toPracticeButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                toPracticeButtonActionPerformed(evt);
            }
        });

        substituteLabel.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        substituteLabel.setText("PRACTICE");

        lineupLabel.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        lineupLabel.setText("PLAYERS");

        selectPracticeLabel.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        selectPracticeLabel.setText("SELECT A PRACTICE");

        practiceDatesComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                practiceDatesComboBoxActionPerformed(evt);
            }
        });

        showPracticeButton.setFont(new java.awt.Font("Monospaced", 0, 11)); // NOI18N
        showPracticeButton.setText("show practice");
        showPracticeButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                showPracticeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toPracticeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(toPlayersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(selectPracticeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(practiceDatesComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(showPracticeButton))
                .addGap(55, 55, 55))
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(lineupLabel)
                .addGap(170, 170, 170)
                .addComponent(substituteLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(overviewLabel)
                .addGap(207, 207, 207))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(overviewLabel)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(substituteLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lineupLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(toPracticeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(toPlayersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(109, 109, 109))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectPracticeLabel)
                        .addGap(22, 22, 22)
                        .addComponent(showPracticeButton)
                        .addGap(18, 18, 18)
                        .addComponent(practiceDatesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(backButton)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_backButtonActionPerformed
    {//GEN-HEADEREND:event_backButtonActionPerformed
        new MobileManager().setVisible(true);
        dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void toPracticeButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_toPracticeButtonActionPerformed
    {//GEN-HEADEREND:event_toPracticeButtonActionPerformed
        String selected = (String) (teamList.getSelectedValue());        
        PlayerArray p = new PlayerArray();
        int index = p.binarySearch(selected);
        p.movePlayer(index);
        
        DefaultListModel<String> playerListModel = new DefaultListModel<String>();
        String[] players = p.getPlayers();
        for (int i = 0; i < players.length; i++) {
            playerListModel.addElement(players[i]);
        }
        teamList.setModel(playerListModel);
        
        Attendance a = new Attendance();
        
        DefaultListModel<String> practiceListModel = new DefaultListModel<String>();
        String[] attendedPlayers = a.getPlayers();
        for (int i = 0; i < attendedPlayers.length; i++) {
            practiceListModel.addElement(attendedPlayers[i]);
        }
        practiceList.setModel(practiceListModel);
    }//GEN-LAST:event_toPracticeButtonActionPerformed

    private void practiceDatesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_practiceDatesComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_practiceDatesComboBoxActionPerformed

    private void showPracticeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPracticeButtonActionPerformed
        String selected = (String) (practiceDatesComboBox.getSelectedItem());

        //Use the backend to update the frontend
        PlayerArray p = new PlayerArray();

        DefaultListModel<String> listModel = new DefaultListModel<String>();
        String[] players = p.getPlayers();
        for (int i = 0; i < players.length; i++) {
            listModel.addElement(players[i]);
        }
        teamList.setModel(listModel);
    }//GEN-LAST:event_showPracticeButtonActionPerformed

    private void toPlayersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toPlayersButtonActionPerformed
        String selected = (String) (practiceList.getSelectedValue());        
        PlayerArray p = new PlayerArray();
        Attendance a = new Attendance();
        int index = a.binarySearch(selected);
        a.movePlayer(index);
        
        DefaultListModel<String> playerListModel = new DefaultListModel<String>();
        String[] players = p.getPlayers();
        for (int i = 0; i < players.length; i++) {
            playerListModel.addElement(players[i]);
        }
        teamList.setModel(playerListModel);
        
        
        DefaultListModel<String> practiceListModel = new DefaultListModel<String>();
        String[] attendedPlayers = a.getPlayers();
        for (int i = 0; i < attendedPlayers.length; i++) {
            practiceListModel.addElement(attendedPlayers[i]);
        }
        practiceList.setModel(practiceListModel);
    }//GEN-LAST:event_toPlayersButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PracticeAttendance.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PracticeAttendance.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PracticeAttendance.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PracticeAttendance.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PracticeAttendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lineupLabel;
    private javax.swing.JLabel overviewLabel;
    private javax.swing.JComboBox<String> practiceDatesComboBox;
    private javax.swing.JList<String> practiceList;
    private javax.swing.JLabel selectPracticeLabel;
    private javax.swing.JButton showPracticeButton;
    private javax.swing.JLabel substituteLabel;
    private javax.swing.JList<String> teamList;
    private javax.swing.JButton toPlayersButton;
    private javax.swing.JButton toPracticeButton;
    // End of variables declaration//GEN-END:variables
}
